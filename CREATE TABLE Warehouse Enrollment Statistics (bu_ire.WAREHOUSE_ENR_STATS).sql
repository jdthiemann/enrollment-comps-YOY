/*	Drop existing table */
--DROP TABLE bu_ire.WAREHOUSE_ENR_STATS;

/*	Delete data from table */
--DELETE FROM bu_ire.WAREHOUSE_ENR_STATS;

/*	Recreate table with new definitions */
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE bu_ire.WAREHOUSE_ENR_STATS
	(
		TERM_SEASON VARCHAR(6) NOT NULL
		, ACAD_LEVEL VARCHAR(5) NOT NULL
		, MOVING_AVG INT NOT NULL
		, TODAY_HC INT NULL
		, TODAY_SCH DEC(8,2) NULL
		, TODAY_HC_DS INT NULL
		, TODAY_SCH_DS DEC(8,2) NULL
		, TODAY_HC_FT INT NULL
		, TODAY_SCH_FT DEC(8,2) NULL
		, DAY1_HC INT NULL
		, DAY1_SCH DEC(8,2) NULL
		, DAY1_HC_DS INT NULL
		, DAY1_SCH_DS DEC(8,2) NULL
		, DAY1_HC_FT INT NULL
		, DAY1_SCH_FT DEC(8,2) NULL
		, PEAK_HC INT NULL
		, PEAK_SCH DEC(8,2) NULL
		, PEAK_HC_DS INT NULL
		, PEAK_SCH_DS DEC(8,2) NULL
		, PEAK_HC_FT INT NULL
		, PEAK_SCH_FT DEC(8,2) NULL
		, CENSUS_HC INT NULL
		, CENSUS_SCH DEC(8,2) NULL
		, CENSUS_HC_DS INT NULL
		, CENSUS_SCH_DS DEC(8,2) NULL
		, CENSUS_HC_FT INT NULL
		, CENSUS_SCH_FT DEC(8,2) NULL
		, CONSTRAINT PK_ENRSTATS_ID PRIMARY KEY (TERM_SEASON ASC, ACAD_LEVEL ASC)
		WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]
GO

/*	Create table indices */
CREATE INDEX IDX_TERM_SEASON ON bu_ire.WAREHOUSE_ENR_STATS (TERM_SEASON);
CREATE INDEX IDX_ACAD_LEVEL ON bu_ire.WAREHOUSE_ENR_STATS (ACAD_LEVEL);


/*	Rebuild data in table */
;WITH BATES_RANGE (TERM, TERM_DESC, TERM_SEASON, BATES_STAMP) AS
	(
		SELECT TERM, TERM_DESC, TERM_SEASON, BATES_STAMP
		FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
		WHERE CONVERT(DATE,TEST_DATE) = CONVERT(DATE,DATEADD(D,-1,GETDATE()))
		GROUP BY TERM, TERM_DESC, TERM_SEASON, BATES_STAMP
	)

, HIGH_WATER_MARK AS
	(
		SELECT
			X.TERM_SEASON
			, X.ACAD_LEVEL
			, MAX(MOVING_AVG) AS MOVING_AVG
			, MAX(C.HEADCOUNT) AS TODAY_HC
			, MAX(C.SCH) AS TODAY_SCH
			, MAX(D.HEADCOUNT) AS TODAY_HC_DS
			, MAX(D.SCH) AS TODAY_SCH_DS
			, MAX(E.HEADCOUNT) AS TODAY_HC_FT
			, MAX(E.SCH) AS TODAY_SCH_FT
			, MAX(F.HEADCOUNT) AS DAY1_HC
			, MAX(F.SCH) AS DAY1_SCH
			, MAX(G.HEADCOUNT) AS DAY1_HC_DS
			, MAX(G.SCH) AS DAY1_SCH_DS
			, MAX(H.HEADCOUNT) AS DAY1_HC_FT
			, MAX(H.SCH) AS DAY1_SCH_FT
			, MAX(I.HEADCOUNT) AS PEAK_HC
			, MAX(I.SCH) AS PEAK_SCH
			, MAX(J.HEADCOUNT) AS PEAK_HC_DS
			, MAX(J.SCH) AS PEAK_SCH_DS
			, MAX(K.HEADCOUNT) AS PEAK_HC_FT
			, MAX(K.SCH) AS PEAK_SCH_FT
			, MAX(L.HEADCOUNT) AS CENSUS_HC
			, MAX(L.SCH) AS CENSUS_SCH
			, MAX(M.HEADCOUNT) AS CENSUS_HC_DS
			, MAX(M.SCH) AS CENSUS_SCH_DS
			, MAX(N.HEADCOUNT) AS CENSUS_HC_FT
			, MAX(N.SCH) AS CENSUS_SCH_FT

		FROM /* driver table to include only past terms and count how many years ago they were */
			(
				SELECT TERM, TERM_SEASON, ACAD_LEVEL, TERM_RANK-1 AS MOVING_AVG
				FROM
					(
						SELECT Y.TERM, Y.TERM_SEASON, 'UG' AS ACAD_LEVEL, ROW_NUMBER() OVER(PARTITION BY TERM_SEASON ORDER BY TERM DESC) AS TERM_RANK
						FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
						GROUP BY Y.TERM, Y.TERM_SEASON
						UNION
						SELECT Y.TERM, Y.TERM_SEASON, 'GR' AS ACAD_LEVEL, ROW_NUMBER() OVER(PARTITION BY TERM_SEASON ORDER BY TERM DESC) AS TERM_RANK
						FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
						GROUP BY Y.TERM, Y.TERM_SEASON
					) X1
				WHERE TERM_RANK > 1
			) X

			JOIN
				( /* headcount and credit hours as of today, all students */
					SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
					FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
						JOIN BATES_RANGE B ON Y.TERM_SEASON=B.TERM_SEASON AND Y.BATES_STAMP=B.BATES_STAMP
					GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL
				) C ON X.TERM=C.TERM AND X.ACAD_LEVEL=C.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* headcount and credit hours as today, degree-seeking students only */
					SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
					FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
						JOIN BATES_RANGE B ON Y.TERM_SEASON=B.TERM_SEASON AND Y.BATES_STAMP=B.BATES_STAMP
						JOIN bu_ire.CENSUS_SNAPSHOT C ON Y.STTR_STUDENT=C.STU_ID AND Y.TERM=C.TERM AND Y.STTR_ACAD_LEVEL=C.PRI_ACAD_LEVEL AND C.DS_STATUS='1'
					GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL
				) D ON X.TERM=D.TERM AND X.ACAD_LEVEL=D.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* headcount and credit hours as of today, full-time students only */
					SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
					FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
						JOIN BATES_RANGE B ON Y.TERM_SEASON=B.TERM_SEASON AND Y.BATES_STAMP=B.BATES_STAMP
						JOIN bu_ire.CENSUS_SNAPSHOT C ON Y.STTR_STUDENT=C.STU_ID AND Y.TERM=C.TERM AND Y.STTR_ACAD_LEVEL=C.PRI_ACAD_LEVEL AND C.CENSUS_LOAD='F'
					GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL
				) E ON X.TERM=E.TERM AND X.ACAD_LEVEL=E.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* headcount and credit hours as of first day of term, all students */
					SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
					FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
					WHERE Y.BATES_STAMP = 0
					GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL
				) F ON X.TERM=F.TERM AND X.ACAD_LEVEL=F.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* headcount and credit hours as of first day of term, degree-seeking students only */
					SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
					FROM bu_ire.STUDENT_ENROLLMENT_YTD Y JOIN bu_ire.CENSUS_SNAPSHOT C ON Y.STTR_STUDENT=C.STU_ID AND Y.TERM=C.TERM AND Y.STTR_ACAD_LEVEL=C.PRI_ACAD_LEVEL AND C.DS_STATUS='1'
					WHERE Y.BATES_STAMP = 0
					GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL
				) G ON X.TERM=G.TERM AND X.ACAD_LEVEL=G.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* headcount and credit hours as of first day of term, full-time students only */
					SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
					FROM bu_ire.STUDENT_ENROLLMENT_YTD Y JOIN bu_ire.CENSUS_SNAPSHOT C ON Y.STTR_STUDENT=C.STU_ID AND Y.TERM=C.TERM AND Y.STTR_ACAD_LEVEL=C.PRI_ACAD_LEVEL AND C.CENSUS_LOAD='F'
					WHERE Y.BATES_STAMP = 0
					GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL
				) H ON X.TERM=H.TERM AND X.ACAD_LEVEL=H.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* peak headcount and credit hours at any point in the registration cycle, all students */
					SELECT TERM, TERM_SEASON, ACAD_LEVEL, MAX(HEADCOUNT) AS HEADCOUNT, MAX(SCH) AS SCH
					FROM
						(
							SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, Y.BATES_STAMP, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
							FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
							WHERE Y.STTR_ACAD_LEVEL IS NOT NULL
							GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL, Y.BATES_STAMP
						) I1
					GROUP BY TERM, TERM_SEASON, ACAD_LEVEL
				) I ON X.TERM=I.TERM AND X.ACAD_LEVEL=I.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* peak headcount and credit hours at any point in the registration cycle, degree-seeking students only */
					SELECT TERM, TERM_SEASON, ACAD_LEVEL, MAX(HEADCOUNT) AS HEADCOUNT, MAX(SCH) AS SCH
					FROM
						(
							SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, Y.BATES_STAMP, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
							FROM bu_ire.STUDENT_ENROLLMENT_YTD Y JOIN bu_ire.CENSUS_SNAPSHOT C ON Y.STTR_STUDENT=C.STU_ID AND Y.TERM=C.TERM AND Y.STTR_ACAD_LEVEL=C.PRI_ACAD_LEVEL AND C.DS_STATUS='1'
							WHERE Y.STTR_ACAD_LEVEL IS NOT NULL
							GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL, Y.BATES_STAMP
						) J1
					GROUP BY TERM, TERM_SEASON, ACAD_LEVEL
				) J ON X.TERM=J.TERM AND X.ACAD_LEVEL=J.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* peak headcount and credit hours at any point in the registration cycle, degree-seeking students only */
					SELECT TERM, TERM_SEASON, ACAD_LEVEL, MAX(HEADCOUNT) AS HEADCOUNT, MAX(SCH) AS SCH
					FROM
						(
							SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, Y.BATES_STAMP, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
							FROM bu_ire.STUDENT_ENROLLMENT_YTD Y JOIN bu_ire.CENSUS_SNAPSHOT C ON Y.STTR_STUDENT=C.STU_ID AND Y.TERM=C.TERM AND Y.STTR_ACAD_LEVEL=C.PRI_ACAD_LEVEL AND C.CENSUS_LOAD='F'
							WHERE Y.STTR_ACAD_LEVEL IS NOT NULL
							GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL, Y.BATES_STAMP
						) K1
					GROUP BY TERM, TERM_SEASON, ACAD_LEVEL
				) K ON X.TERM=K.TERM AND X.ACAD_LEVEL=K.ACAD_LEVEL

			JOIN
				( /* headcount and credit hours as of census day, all students */
					SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
					FROM bu_ire.STUDENT_ENROLLMENT_YTD Y JOIN ODS_TERMS T ON Y.TERM=T.TERMS_ID AND Y.TEST_DATE=T.B13_TERM_CENSUS_DATE
					GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL
				) L ON X.TERM=L.TERM AND X.ACAD_LEVEL=L.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* headcount and credit hours as of census day, degree-seeking students only */
					SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
					FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
						JOIN ODS_TERMS T ON Y.TERM=T.TERMS_ID AND Y.TEST_DATE=T.B13_TERM_CENSUS_DATE
						JOIN bu_ire.CENSUS_SNAPSHOT C ON Y.STTR_STUDENT=C.STU_ID AND Y.TERM=C.TERM AND Y.STTR_ACAD_LEVEL=C.PRI_ACAD_LEVEL AND C.DS_STATUS='1'
					GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL
				) M ON X.TERM=M.TERM AND X.ACAD_LEVEL=M.ACAD_LEVEL

			LEFT OUTER JOIN
				( /* headcount and credit hours as of census day, full-time students only */
					SELECT Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL AS ACAD_LEVEL, COUNT(Y.STTR_STUDENT) AS HEADCOUNT, SUM(Y.STC_CRED_SUM) AS SCH
					FROM bu_ire.STUDENT_ENROLLMENT_YTD Y
						JOIN ODS_TERMS T ON Y.TERM=T.TERMS_ID AND Y.TEST_DATE=T.B13_TERM_CENSUS_DATE
						JOIN bu_ire.CENSUS_SNAPSHOT C ON Y.STTR_STUDENT=C.STU_ID AND Y.TERM=C.TERM AND Y.STTR_ACAD_LEVEL=C.PRI_ACAD_LEVEL AND C.CENSUS_LOAD='F'
					GROUP BY Y.TERM, Y.TERM_SEASON, Y.STTR_ACAD_LEVEL
				) N ON X.TERM=N.TERM AND X.ACAD_LEVEL=N.ACAD_LEVEL

		GROUP BY X.TERM_SEASON, X.ACAD_LEVEL
	)

/* uncomment the line below to copy & paste into the SQL Server Agent */
INSERT INTO bu_ire.WAREHOUSE_ENR_STATS

SELECT *
FROM HIGH_WATER_MARK HWM

UNION

SELECT
	TERM_SEASON
	, 'TOTAL'
	, MAX(MOVING_AVG)
	, SUM(TODAY_HC)
	, SUM(TODAY_SCH)
	, SUM(TODAY_HC_DS)
	, SUM(TODAY_SCH_DS)
	, SUM(TODAY_HC_FT)
	, SUM(TODAY_SCH_FT)
	, SUM(DAY1_HC)
	, SUM(DAY1_SCH)
	, SUM(DAY1_HC_DS)
	, SUM(DAY1_SCH_DS)
	, SUM(DAY1_HC_FT)
	, SUM(DAY1_SCH_FT)
	, SUM(PEAK_HC)
	, SUM(PEAK_SCH)
	, SUM(PEAK_HC_DS)
	, SUM(PEAK_SCH_DS)
	, SUM(PEAK_HC_FT)
	, SUM(PEAK_SCH_FT)
	, SUM(CENSUS_HC)
	, SUM(CENSUS_SCH)
	, SUM(CENSUS_HC_DS)
	, SUM(CENSUS_SCH_DS)
	, SUM(CENSUS_HC_FT)
	, SUM(CENSUS_SCH_FT)

FROM HIGH_WATER_MARK HWM
GROUP BY TERM_SEASON


/*	Confirm data loaded correctly */
SELECT *
FROM bu_ire.WAREHOUSE_ENR_STATS
ORDER BY 2, 1

/*	Revision history:
		JDT 6/8/2020: Created view for use in comparative enrollment reporting as a means to view day one, census, and peak enrollment/headcount
				for each academic level by season.
*/
